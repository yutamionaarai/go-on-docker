version: "3.8"
services:
  db:
    image: postgres:14
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 20
    volumes:
      - type: volume
        source: db_data
        target: /var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      TZ: Asia/Tokyo
      PGTZ: Asia/Tokyo

  test_db:
    image: postgres:14
    ports:
      - "5436:5432"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 20
    volumes:
      - type: volume
        source: test_db_data
        target: /var/lib/postgresql/data
    environment:
      POSTGRES_DB: test
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      TZ: Asia/Tokyo
      PGTZ: Asia/Tokyo

  app:
    build:
      context: .
      dockerfile: Dockerfile
    tty: true
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      test_db:
        condition: service_healthy
    volumes:
      - type: bind
        source: .
        target: /go/src/app
      - type: volume
        source: app
        target: /go/pkg/mod

volumes:
  db_data:
  test_db_data:
  app:
